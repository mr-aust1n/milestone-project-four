import random
from decimal import Decimal

from django.contrib.auth.models import User
from django.core.management.base import BaseCommand

from items.models import Item


class Command(BaseCommand):
    help = "Seed the database with test data and images"

    def handle(self, *args, **kwargs):
        # Create 3 fake users
        for i in range(3):
            username = f"user{i+1}"
            if not User.objects.filter(username=username).exists():
                User.objects.create_user(
                    username=username,
                    email=f"{username}@test.com",
                    password="Testpass123",
                )
                self.stdout.write(self.style.SUCCESS(f"User {username} created"))

        users = User.objects.all()

        # Product data with Cloudinary image IDs
        product_data = [
            ("Trainers", "cld-sample-5", 49.99, "fashion"),
            ("Leather Bag", "samples/ecommerce/leather-bag-gray", 89.99, "fashion"),
            ("Sunglasses", "samples/man-portrait", 29.99, "fashion"),
            ("Hot Air Balloon", "samples/balloons", 199.99, "home"),
            ("Watch", "samples/ecommerce/analog-classic", 149.99, "fashion"),
            ("Cat", "samples/animals/cat", 19.99, "home"),
            ("Deer", "samples/animals/reindeer", 39.99, "home"),
            (
                "Steering Wheel",
                "samples/ecommerce/car-interior-design",
                129.99,
                "electronics",
            ),
            ("Spices", "samples/food/spices", 9.99, "home"),
        ]

        for title, image, price, category in product_data:
            seller = random.choice(users)
            Item.objects.create(
                title=title,
                description=f"{title} description generated by seeder.",
                price=Decimal(price),
                category=category,
                seller=seller,
                image=image,
                quantity=random.randint(1, 5),
            )

        self.stdout.write(self.style.SUCCESS("Database successfully seeded."))
